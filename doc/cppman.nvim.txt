*cppman.nvim.txt*        For NVIM >= 0.10.0       Last change: 2025 January 18

==============================================================================
Table of Contents                              *cppman.nvim-table-of-contents*

1. cppman.nvim                                       |cppman.nvim-cppman.nvim|
  - Features                                |cppman.nvim-cppman.nvim-features|
  - Requirements                        |cppman.nvim-cppman.nvim-requirements|
  - Installation                        |cppman.nvim-cppman.nvim-installation|
  - Configuration                      |cppman.nvim-cppman.nvim-configuration|
  - Usage                                      |cppman.nvim-cppman.nvim-usage|
  - API                                          |cppman.nvim-cppman.nvim-api|
  - Command                                  |cppman.nvim-cppman.nvim-command|
2. Links                                                   |cppman.nvim-links|

==============================================================================
1. cppman.nvim                                       *cppman.nvim-cppman.nvim*

Search and view the cppreference <https://en.cppreference.com/> manuals on the
fly, in your favorite editor!


FEATURES                                    *cppman.nvim-cppman.nvim-features*

- View the manuals right inside the neovim.
- Search in all manuals on the fly. What you can expect from a vscode extension
    <https://github.com/Guyutongxue/VSC_CppReference> or a browser extension
    <https://github.com/huhu/cpp-search-extension> is now available in neovim!
- `K` keymap support. In the manual you can press `K` and jump to the manual for
    `<cword>`.


REQUIREMENTS                            *cppman.nvim-cppman.nvim-requirements*

- NVIM >= 0.10.
- cppman <https://github.com/aitjcize/cppman>
- `sqlite3`, used to query the index database.


INSTALLATION                            *cppman.nvim-cppman.nvim-installation*

lazy.nvim <https://github.com/folke/lazy.nvim>

>lua
    {
      "v1nh1shungry/cppman.nvim",
      cmd = "Cppman",
      dependencies = {
        "nvim-telescope/telescope.nvim", -- optional for telescope picker
        "folke/snacks.nvim", -- optional for snacks picker
      },
      opts = {}, -- required, `setup()` must be called
    }
<


CONFIGURATION                          *cppman.nvim-cppman.nvim-configuration*

>lua
    -- default
    require('cppman').setup {
      -- * builtin: `vim.ui.select()`
      -- * telescope
      -- * snacks (recommended)
      picker = "builtin",
      -- used in `vim.api.nvim_open_win`
      win_opts = {
        split = "below",
        style = "minimal",
      },
    }
<

**NOTE**`$XDG_CACHE_HOME/cppman/index.db` will be used if it exists, because
this one is more likely to be the latest. When you run `cppman -r`, `cppman`
will rebuild the index database and store it in
`$XDG_CACHE_HOME/cppman/index.db`.


USAGE                                          *cppman.nvim-cppman.nvim-usage*


API                                              *cppman.nvim-cppman.nvim-api*

- `require('cppman').search()`Search in all manuals. Use `telescope.nvim` if
    available, otherwise use `vim.ui.select()`.
- `require('cppman').open(keyword, list_all?)`find entries contain keyword, if
    thereâ€™re multiple matches, the very first one will be picked. Set `list_all`
    to true can list all matches.


COMMAND                                      *cppman.nvim-cppman.nvim-command*

- `:Cppman [keyword]`calling with no argument will act like `search`, otherwise `open`.

==============================================================================
2. Links                                                   *cppman.nvim-links*

1. *demo*: https://user-images.githubusercontent.com/98312435/256980587-be86148a-1e35-4b2a-85d0-f905782746ab.gif

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
